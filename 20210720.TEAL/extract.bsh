# quick prototype to 
# extract blob data from a column to a flat file sitting on a file system
# cx request is to pull blob data from a column and then transfer to s3
# note that the table has a filename as well as the blob column
# so the code uses filename to store the blob data


sqlplus "ttsheng/Pass1234@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=ttsora10.ciushqttrpqx.us-east-2.rds.amazonaws.com)(PORT=1521))(CONNECT_DATA=(SID=ttsora10)))" <<EQ
set serveroutput on;
set linesize 200;

DECLARE
  l_file      UTL_FILE.FILE_TYPE;
  l_buffer    RAW(32767);
  l_amount    BINARY_INTEGER := 32767;
  l_pos       INTEGER := 1;
  l_blob      BLOB;
  l_blob_len  INTEGER;
  l_filename  varchar2(40);
  l_id        integer;
BEGIN
for r in (select id, content, filename from titan where id < 50)
loop
 -- dbms_output.put_line ('working on '  || r.id || ' - ' || r.filename);
  -- Get LOB locator
  SELECT content
  INTO   l_blob
  FROM   titan
  WHERE  id = r.id;

  l_blob_len := DBMS_LOB.getlength(l_blob);
  
  -- Open the destination file.
  l_file := UTL_FILE.fopen('DATA_PUMP_DIR',r.filename,'wb', 32767);

  -- Read chunks of the BLOB and write them to the file
  -- until complete.
  WHILE l_pos <= l_blob_len LOOP
    DBMS_LOB.read(l_blob, l_amount, l_pos, l_buffer);
    UTL_FILE.put_raw(l_file, l_buffer, TRUE);
    l_pos := l_pos + l_amount;
  END LOOP;
  
  -- Close the file.
UTL_FILE.fclose(l_file);

end loop;
  
EXCEPTION
  WHEN OTHERS THEN
    -- Close the file if something goes wrong.
    IF UTL_FILE.is_open(l_file) THEN
      UTL_FILE.fclose(l_file);
    END IF;
    RAISE;
END;
/
col filename format a40
col type format a10
SELECT * FROM TABLE(rdsadmin.rds_file_util.listdir('DATA_PUMP_DIR')) ORDER BY MTIME;
exit
EQ

## code to transfer the file here
## if you are using oracle on prem to s3
## call aws s3 cp 

## code below is for oracle on rds to transfer file to s3
#sqlplus "admin/Pass1234@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=ttsora10.ciushqttrpqx.us-east-2.rds.amazonaws.com)(PORT=1521))(CONNECT_DATA=(SID=ttsora10)))" <<EQ
#SELECT rdsadmin.rdsadmin_s3_tasks.upload_to_s3(
#      p_bucket_name    =>  'ttsheng-misc', 
#--      p_prefix         =>  'budget', 
#--      p_s3_prefix      =>  '', 
#      p_directory_name =>  'DATA_PUMP_DIR') 
#   AS TASK_ID FROM DUAL;
#exit;
#EQ
exit

