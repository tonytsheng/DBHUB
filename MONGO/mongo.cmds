# bulk import from command line
$ mongoimport --db test --collection inventory \
        --authenticationDatabase admin --username admin --password Pass1234 \
        --drop --file DAT/inventory.crud.json

## make sure input file is just json records:
## no commas, one json doc per row
#{ "item": "journal", "qty": 25, "size": { "h": 14, "w": 21, "uom": "cm" }, "status": "A" }
#{ "item": "notebook", "qty": 50, "size": { "h": 8.5, "w": 11, "uom": "in" }, "status": "A" }
#{ "item": "paper", "qty": 100, "size": { "h": 8.5, "w": 11, "uom": "in" }, "status": "D" }
#
# can also import with --jsonArray
# [{ "item": "journal", "qty": 25, "size": { "h": 14, "w": 21, "uom": "cm" }, "status": "A" },
#{ "item": "notebook", "qty": 50, "size": { "h": 8.5, "w": 11, "uom": "in" }, "status": "A" },
#{ "item": "paper", "qty": 100, "size": { "h": 8.5, "w": 11, "uom": "in" }, "status": "D" } ]

# csv file
$ mongoimport -d tymongo -c test --type csv --file database2.csv --headerline

$ mongorestore --username=admin --password=Pass1234 --authenticationDatabase=admin --archive=sampledata.archive 
# shell commands
$ mongo
db.help()

use admin
db.auth("admin","Pass1234")


use test
rs.status

s0:PRIMARY> db.adminCommand({listDatabases:1})
{
        "databases" : [
                {
                        "name" : "admin",
                        "sizeOnDisk" : 184320,
                        "empty" : false
                },
                {
                        "name" : "config",
                        "sizeOnDisk" : 77824,
                        "empty" : false
                },
                {
                        "name" : "local",
                        "sizeOnDisk" : 161398784,
                        "empty" : false
                },
                {
                        "name" : "sample_airbnb",
                        "sizeOnDisk" : 55033856,
                        "empty" : false
                },
                {
                        "name" : "sample_analytics",
                        "sizeOnDisk" : 9895936,
                        "empty" : false
                },
                {
                        "name" : "sample_geospatial",
                        "sizeOnDisk" : 987136,
                        "empty" : false
                },
                {
                        "name" : "sample_mflix",
                        "sizeOnDisk" : 41713664,
                        "empty" : false
                },
                {
                        "name" : "sample_restaurants",
                        "sizeOnDisk" : 6164480,
                        "empty" : false
                },
                {
                        "name" : "sample_supplies",
                        "sizeOnDisk" : 983040,
                        "empty" : false
                },
                {
                        "name" : "sample_training",
                        "sizeOnDisk" : 43057152,
                        "empty" : false
                },
                {
                        "name" : "sample_weatherdata",
                        "sizeOnDisk" : 2478080,
                        "empty" : false
                },
                {
                        "name" : "test",
                        "sizeOnDisk" : 11624448,
                        "empty" : false
                }
        ],
        "totalSize" : 333598720,
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1636335796, 1),
                "signature" : {
                        "hash" : BinData(0,"D+VajCvGgeNtWw0hZ9Kfik3GfMI="),
                        "keyId" : NumberLong("7026031798597451780")
                }
        },
        "operationTime" : Timestamp(1636335796, 1)
}

s0:PRIMARY> db.getCollectionNames()
[ "inventory" ]

s0:PRIMARY> db.inventory.find()
{ "_id" : ObjectId("6183e76bb4a0c61187cdd3ce"), "item" : "journal", "qty" : 25, "size" : { "h" : 14, "w" : 21, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e76bb4a0c61187cdd3cf"), "item" : "paper", "qty" : 100, "size" : { "h" : 8.5, "w" : 11, "uom" : "in" }, "status" : "D" }
{ "_id" : ObjectId("6183e76bb4a0c61187cdd3d0"), "item" : "planner", "qty" : 75, "size" : { "h" : 22.85, "w" : 30, "uom" : "cm" }, "status" : "D" }
{ "_id" : ObjectId("6183e76bb4a0c61187cdd3d1"), "item" : "postcard", "qty" : 45, "size" : { "h" : 10, "w" : 15.25, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e76bb4a0c61187cdd3d2"), "item" : "notebook", "qty" : 50, "size" : { "h" : 8.5, "w" : 11, "uom" : "in" }, "status" : "A" }

s0:PRIMARY> db.inventory.find( {item: "notebook"})
{ "_id" : ObjectId("6183e76bb4a0c61187cdd3d2"), "item" : "notebook", "qty" : 50, "size" : { "h" : 8.5, "w" : 11, "uom" : "in" }, "status" : "A" }


s0:PRIMARY> db.inventory.find( {item: "postcard"})
{ "_id" : ObjectId("6183e9d3dbc1da23cb031df2"), "item" : "postcard", "qty" : 45, "size" : { "h" : 10, "w" : 15.25, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e9d3dbc1da23cb031df3"), "item" : "postcard", "qty" : 5, "size" : { "h" : 1, "w" : 15.25, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e9d3dbc1da23cb031df4"), "item" : "postcard", "qty" : 95, "size" : { "h" : 5, "w" : 15.25, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e9d3dbc1da23cb031df5"), "item" : "postcard", "qty" : 35, "size" : { "h" : 55, "w" : 15.25, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e9d3dbc1da23cb031df6"), "item" : "postcard", "qty" : 15, "size" : { "h" : 16, "w" : 15.25, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e9d3dbc1da23cb031df7"), "item" : "postcard", "qty" : 45, "size" : { "h" : 17, "w" : 15.25, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e9d3dbc1da23cb031df8"), "item" : "postcard", "qty" : 45, "size" : { "h" : 19, "w" : 15.25, "uom" : "cm" }, "status" : "A" }
{ "_id" : ObjectId("6183e9d3dbc1da23cb031df9"), "item" : "postcard", "qty" : 45, "size" : { "h" : 18, "w" : 15.25, "uom" : "cm" }, "status" : "A" }

s0:PRIMARY> db.createCollection("tonechart")
{
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1636035353, 1),
                "signature" : {
                        "hash" : BinData(0,"OhbhBAms06y8KyBNCuQYXy10Ojg="),
                        "keyId" : NumberLong("7026031798597451780")
                }
        },
        "operationTime" : Timestamp(1636035353, 1)
}
s0:PRIMARY> db.getCollectionNames()
[ "inventory", "tonechart" ]

s0:PRIMARY> db.nfl.count()
866

s0:PRIMARY> db.nfl.find({"title" : {$regex: "BUD"}})

s0:PRIMARY> db.nfl.find({"title" : {$regex: "BUD"}}).count()
99


