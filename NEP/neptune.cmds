curl -G https://nep2001-instance-1.czzdit7hfndz.us-east-2.neptune.amazonaws.com:8182/loader
{
    "status" : "200 OK",
    "payload" : {
        "loadIds" : [
            "33f4a50e-6980-4d70-b876-def749b2002d"
        ]
    }
}[ec2-user@ip-172-31-20-159 NEP]$ curl -G https://nep2001-instance-1.czzdit7hfnd.us-east-2.neptune.amazonaws.com:8182/loader/33f4a50e-6980-4d70-b876-def749b2002d
{
    "status" : "200 OK",
    "payload" : {
        "feedCount" : [
            {
                "LOAD_NOT_STARTED" : 7
            },
            {
                "LOAD_IN_PROGRESS" : 1
            },
            {
                "LOAD_COMPLETED" : 1
            }
        ],
        "overallStatus" : {
            "fullUri" : "s3://ttsheng-neptune-csv/Unsaved/2021/04/22",
            "runNumber" : 1,
            "retryNumber" : 0,
            "status" : "LOAD_IN_PROGRESS",
            "totalTimeSpent" : 30,
            "startTime" : 1619361128,
            "totalRecords" : 526443,
            "totalDuplicates" : 0,
            "parsingErrors" : 0,
            "datatypeMismatchErrors" : 0,
            "insertErrors" : 0
        }
    }
}[ec2-user@ip-172-31-20-159 NEP]$ curl -G https://nep2001-instance-1.czzdit7hfnd.us-east-2.neptune.amazonaws.com:8182/loader/33f4a50e-6980-4d70-b876-def749b2002d
{
    "status" : "200 OK",
    "payload" : {
        "feedCount" : [
            {
                "LOAD_NOT_STARTED" : 7
            },
            {
                "LOAD_IN_PROGRESS" : 1
            },
            {
                "LOAD_COMPLETED" : 1
            }
        ],
        "overallStatus" : {
            "fullUri" : "s3://ttsheng-neptune-csv/Unsaved/2021/04/22",
            "runNumber" : 1,
            "retryNumber" : 0,
            "status" : "LOAD_IN_PROGRESS",
            "totalTimeSpent" : 36,
            "startTime" : 1619361128,
            "totalRecords" : 646443,
            "totalDuplicates" : 0,
            "parsingErrors" : 0,
            "datatypeMismatchErrors" : 0,
            "insertErrors" : 0
        }
    }
}[ec2-user@ip-172-31-20-159 NEP]$
[ec2-user@ip-172-31-20-159 NEP]$ curl -G https://nep2001-instance-1.czzdit7hfndz.us-east-2.neptune.amazonaws.com:8182/loader/33f4a50e-6980-4d70-b876-def749b2002d
{
    "status" : "200 OK",
    "payload" : {
        "feedCount" : [
            {
                "LOAD_NOT_STARTED" : 7
            },
            {
                "LOAD_IN_PROGRESS" : 1
            },
            {
                "LOAD_COMPLETED" : 1
            }
        ],
        "overallStatus" : {
            "fullUri" : "s3://ttsheng-neptune-csv/Unsaved/2021/04/22",
            "runNumber" : 1,
            "retryNumber" : 0,
            "status" : "LOAD_IN_PROGRESS",
            "totalTimeSpent" : 38,
            "startTime" : 1619361128,
            "totalRecords" : 676443,
            "totalDuplicates" : 0,
            "parsingErrors" : 0,
            "datatypeMismatchErrors" : 0,
            "insertErrors" : 0
        }
    }
}[ec2-user@ip-172-31-20-159 NEP]$

/home/ec2-user/rpms/apache-tinkerpop-gremlin-console-3.4.10/bin/gremlin.sh
:remote connect tinkerpop.server /home/ec2-user/rpms/apache-tinkerpop-gremlin-console-3.4.10/conf/neptune-remote.yaml
:remote console
g.V()
g.E()


gremlin> g.V().label().groupCount()
==>{continent=7, country=237, version=1, airport=3497}
gremlin> g.V().has('code', 'ORD').valueMap(true)
==>{country=[US], code=[ORD], longest=[13000], city=[Chicago], id=18, lon=[-87.90480042], label=airport, type=[airport], elev=[672], icao=[KORD], region=[US-IL], runways=[7], lat=[41.97859955], desc=[Chicago O'Hare International Airport]}
gremlin> g.V().has('code', 'ORD').valueMap(true).unfold()
==>country=[US]
==>code=[ORD]
==>longest=[13000]
==>city=[Chicago]
==>id=18
==>lon=[-87.90480042]
==>label=airport
==>type=[airport]
==>elev=[672]
==>icao=[KORD]
==>region=[US-IL]
==>runways=[7]
==>lat=[41.97859955]
==>desc=[Chicago O'Hare International Airport]
gremlin> g.V().count()
==>3742
gremlin> g.V("4").valueMap(true).unfold()
==>country=[US]
==>code=[BNA]
==>longest=[11030]
==>city=[Nashville]
==>id=4
==>lon=[-86.6781997680664]
==>label=airport
==>type=[airport]
==>elev=[599]
==>icao=[KBNA]
==>region=[US-TN]
==>runways=[4]
==>lat=[36.1245002746582]
==>desc=[Nashville International Airport]
gremlin>  g.V().has('code','ORD').out().path().by('code')
==>path[ORD, UST]
==>path[ORD, SUN]
==>path[ORD, MCW]
==>path[ORD, IWD]
==>path[ORD, BFM]
==>path[ORD, ATL]
==>path[ORD, ANC]
==>path[ORD, AUS]
==>path[ORD, BNA]
==>path[ORD, BOS]
==>path[ORD, BWI]
==>path[ORD, DCA]
==>path[ORD, DFW]
==>path[ORD, FLL]
==>path[ORD, IAD]
==>path[ORD, IAH]
==>path[ORD, JFK]
==>path[ORD, LAX]
==>path[ORD, LGA]
==>path[ORD, MCO]
==>path[ORD, MIA]
==>path[ORD, MSP]
==>path[ORD, PBI]
==>path[ORD, PHX]
==>path[ORD, RDU]
==>path[ORD, SEA]
==>path[ORD, SFO]
==>path[ORD, SJC]
==>path[ORD, TPA]
==>path[ORD, SAN]
==>path[ORD, SNA]
==>path[ORD, SLC]
==>path[ORD, LAS]
==>path[ORD, DEN]
==>path[ORD, HPN]
==>path[ORD, SAT]
==>path[ORD, MSY]
==>path[ORD, EWR]
==>path[ORD, CID]
==>path[ORD, HNL]
==>path[ORD, ELP]
==>path[ORD, SJU]
==>path[ORD, CLE]
==>path[ORD, OAK]
==>path[ORD, TUS]
==>path[ORD, PHL]
==>path[ORD, DTW]
==>path[ORD, YYZ]
==>path[ORD, YVR]
==>path[ORD, LHR]
==>path[ORD, LGW]
==>path[ORD, CDG]
==>path[ORD, FRA]
==>path[ORD, NRT]
==>path[ORD, DXB]
==>path[ORD, DEL]
==>path[ORD, DUB]
==>path[ORD, HKG]
==>path[ORD, AKL]
==>path[ORD, PEK]
==>path[ORD, PVG]
==>path[ORD, FCO]
==>path[ORD, AMS]
==>path[ORD, BCN]
==>path[ORD, MAD]
==>path[ORD, VIE]
==>path[ORD, ZRH]
==>path[ORD, YOW]
==>path[ORD, BRU]
==>path[ORD, MUC]
==>path[ORD, RSW]
==>path[ORD, MAN]
==>path[ORD, YUL]
==>path[ORD, YEG]
==>path[ORD, VCE]
==>path[ORD, ARN]
==>path[ORD, YYC]
==>path[ORD, HND]
==>path[ORD, DOH]
==>path[ORD, MXP]
==>path[ORD, ATH]
==>path[ORD, BUD]
==>path[ORD, ICN]
==>path[ORD, GRU]
==>path[ORD, MEX]
==>path[ORD, WAW]
==>path[ORD, ADD]
==>path[ORD, PIT]
==>path[ORD, PWM]
==>path[ORD, PDX]
==>path[ORD, OKC]
==>path[ORD, ONT]
==>path[ORD, ROC]
==>path[ORD, RST]
==>path[ORD, IST]
==>path[ORD, YHZ]
==>path[ORD, AUH]
==>path[ORD, YWG]
==>path[ORD, CPH]
==>path[ORD, CLT]
...
gremlin> g.V().has('code', 'BWI').valueMap(true)
==>{country=[US], code=[BWI], longest=[10502], city=[Baltimore], id=6, lon=[-76.66829681], label=airport, type=[airport], elev=[143], icao=[KBWI], region=[US-MD], runways=[3], lat=[39.17539978], desc=[Baltimore/Washington International Airport]}
gremlin>  g.V().has('code', 'ORD').valueMap(true).unfold()
==>country=[US]
==>code=[ORD]
==>longest=[13000]
==>city=[Chicago]
==>id=18
==>lon=[-87.90480042]
==>label=airport
==>type=[airport]
==>elev=[672]
==>icao=[KORD]
==>region=[US-IL]
==>runways=[7]
==>lat=[41.97859955]
==>desc=[Chicago O'Hare International Airport]
gremlin>  g.E().has('code', 'ORD').valueMap(true).unfold()

