set up git ssh key
git init 
git pull git@github.com:tonytsheng/DBHUB.git master

## modify inbound rules for security group
# make sure ec2 and database is in the same security group
# then add the right inbound rules in that group - the ones labelled for the database engines
https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Scenarios.html

## ORA
## download instant clients and unzip
sudo su - 
cd /opt
mkdir oracle
cd oracle
unzip ~/rpms/instantclient-basic-linux.x64-19.9.0.0.0dbru.zip
unzip ~/rpms/instantclient-sqlplus-linux.x64-19.9.0.0.0dbru.zip

## Oracle python connect
sudo python3 -m pip install cx_Oracle --upgrade

## link library
[root@ip-172-31-42-171 ~]# cd /usr/lib64
[root@ip-172-31-42-171 lib64]# ln -sf libnsl.so.2 libnsl.so.1

## set up .bash_profile with env vars
export ORACLE_HOME=/opt/oracle/instantclient_19_9
export LD_LIBRARY_PATH=/opt/oracle/instantclient_19_9
export PATH=$ORACLE_HOME:$PATH

## install this rpm
sudo yum install libaio-0.3.112-1.el8.x86_64

## set up tnsnames.ora in $ORACLE_HOME/network/admin

sqlplus 'admin/PW@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=dnshostname)(PORT=1521))(CONNECT_DATA=(SID=DATABASE)))'

## MySQL
## download and install
sudo yum install mysql80-community-release-el8-1.noarch.rpm
sudo yum install mysql

mysql -h dnshostname -P 3306 -u admin -p

## Sybase ASE
# download and install
SDK for Sybase ASE which includes open client
linuxamd64164001.tgz
tar xvf 
./setup.bin
choose America. accept license agreement. choose typical. install path /home/ec2-user/sybase/sap
source /home/ec2-user/sybase/sap/SYBASE.sh
create interfaces file in /home/ec2-user/sybase/sap
isql will be run from /home/ec2-user/sybase/sap//sybase/sap/OCS-16_0/bin/

## MS Sql Server
download and install
sudo su
curl https://packages.microsoft.com/config/rhel/8/prod.repo > /etc/yum.repos.d/msprod.repo
exit
sudo yum install mssql-tools unixODBC-devel
add /opt/mssql-tools/bin/to $PATH in .bash_profile

sudo yum install readline*

## set ClientAliveInterval 60 in /etc/ssh/sshd_config
sysctl sshd restart

## zip/unzip
sudo yum install zip

## aws cli
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
complete -C aws_completer aws # command completer add this to .bash_profile
go into IAM
generate new aws credentials for a specific user
aws configure
add specifics on ec2 from the console

## bind-utils - host, nslookup
sudo yum install bind-utils

## wget
sudo yum install wget

## postgres stuff - not exact but you get the idea
sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
rpm -qa postgres*
sudo yum reinstall postgresql11-server-11.8-1PGDG.f30.x86_64
sudo yum reinstall postgresql11-server-11
sudo yum reinstall postgresql11

## rpm list
awscliv2.zip # aws cli
instantclient-basic-linux.x64-19.9.0.0.0dbru.zip #oracle 
instantclient-sqlplus-linux.x64-19.9.0.0.0dbru.zip #oracle 
mysql80-community-release-el8-1.noarch.rpm #mysql
mssql-tools-17.7.1.1-1.x86_64 #ms sql server
oracle-instantclient19.9-sqlplus-19.9.0.0.0-1.x86_64.rpm #oracle
postfix-2.10.1-6.amzn2.0.3.x86_64
postgresql12-contrib-12.7-1PGDG.rhel7.x86_64
postgresql12-libs-12.7-1PGDG.rhel7.x86_64
postgresql12-server-12.7-1PGDG.rhel7.x86_64
postgresql12-12.7-1PGDG.rhel7.x86_64
postgresql12-contrib-12.7-1PGDG.rhel7.x86_64
postgresql12-libs-12.7-1PGDG.rhel7.x86_64

yum install -y https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-latest-x86_64/postgresql10-10.7-2PGDG.rhel7.x86_64.rpm
sudo yum install -y https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-latest-x86_64/postgresql10-10.7-2PGDG.rhel7.x86_64.rpm

## sql server
sudo su - 
curl https://packages.microsoft.com/config/rhel/8/prod.repo > /etc/yum.repos.d/mssql-release.repo
exit
sudo yum remove unixODBC-utf16 unixODBC-utf16-devel #to avoid conflicts
sudo ACCEPT_EULA=Y yum install -y msodbcsql17
sudo ACCEPT_EULA=Y yum install -y mssql-tools
echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
source ~/.bashrc

## vcp to vcp peering
#set up vcp peering connection
#route tables for each pointing at peer
#security groups for ports
#dns hostnames enabled
#dns resolution enabled
#
